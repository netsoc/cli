on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: vars
        name: Generate release vars
        run: |
          echo "::set-output name=version::"$(echo "${{ github.ref }}" | sed -r 's|refs/tags/v(.+)|\1|')""

          echo "Changelog: " > release.md
          git log --pretty=format:" - %s" "$(git describe --tags --abbrev=0 ${{ github.event.ref }}^)"..${{ github.event.ref }} >> release.md

      - name: Cross compile with xgo
        uses: crazy-max/ghaction-xgo@v1
        with:
          go_version: 1.15.x
          pkg: cmd/netsoc
          dest: bin
          ldflags: '-X github.com/netsoc/cli/version.Version=v${{ steps.vars.outputs.version }}'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.vars.outputs.version }}
          body_path: release.md

      - name: Upload binaries to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'bin/github.com/netsoc/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: v${{ steps.vars.outputs.version }}

      - name: Generate reference documentation
        run: |
          rm -rf docs/reference/
          mkdir -p docs/reference/

          bin/github.com/netsoc/cli-linux-amd64 docs -t markdown -o docs/reference/
          ./gen_mkdocs_pages.py docs/reference/ > docs/reference/.pages

      - id: stage_docs
        name: Stage reference docs changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          changed="no"
          git add docs/reference/
          git diff-index --quiet HEAD -- || changed="yes"

          echo "::set-output name=changed::$changed"

      - name: Commit reference docs changes
        if: ${{ steps.stage_docs.outputs.changed == 'yes' }}
        run: git commit -m "Re-generate reference documentation"

      - name: Push documentation
        if: ${{ steps.stage_docs.outputs.changed == 'yes' }}
        uses: ad-m/github-push-action@master
        with:
          # Use a PAT because we need to trigger a workflow run
          github_token: '${{ secrets.CI_PAT }}'
          tags: true
